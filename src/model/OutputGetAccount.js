/**
 * QAN AutoApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OutputGetAccount model module.
 * @module model/OutputGetAccount
 * @version 0.0.1
 */
class OutputGetAccount {
    /**
     * Constructs a new <code>OutputGetAccount</code>.
     * @alias module:model/OutputGetAccount
     * @param balance {String} The current balance of the account in wei
     * @param codeHash {String} A 32 byte hash of the code of the account
     * @param nonce {String} The transaction count of an account
     * @param storageRoot {String} The hash of the account's storage data
     */
    constructor(balance, codeHash, nonce, storageRoot) { 
        
        OutputGetAccount.initialize(this, balance, codeHash, nonce, storageRoot);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, balance, codeHash, nonce, storageRoot) { 
        obj['Balance'] = balance;
        obj['CodeHash'] = codeHash;
        obj['Nonce'] = nonce;
        obj['StorageRoot'] = storageRoot;
    }

    /**
     * Constructs a <code>OutputGetAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutputGetAccount} obj Optional instance to populate.
     * @return {module:model/OutputGetAccount} The populated <code>OutputGetAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutputGetAccount();

            if (data.hasOwnProperty('$schema')) {
                obj['$schema'] = ApiClient.convertToType(data['$schema'], 'String');
            }
            if (data.hasOwnProperty('Balance')) {
                obj['Balance'] = ApiClient.convertToType(data['Balance'], 'String');
            }
            if (data.hasOwnProperty('CodeHash')) {
                obj['CodeHash'] = ApiClient.convertToType(data['CodeHash'], 'String');
            }
            if (data.hasOwnProperty('Nonce')) {
                obj['Nonce'] = ApiClient.convertToType(data['Nonce'], 'String');
            }
            if (data.hasOwnProperty('StorageRoot')) {
                obj['StorageRoot'] = ApiClient.convertToType(data['StorageRoot'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutputGetAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutputGetAccount</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OutputGetAccount.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['$schema'] && !(typeof data['$schema'] === 'string' || data['$schema'] instanceof String)) {
            throw new Error("Expected the field `$schema` to be a primitive type in the JSON string but got " + data['$schema']);
        }
        // ensure the json data is a string
        if (data['Balance'] && !(typeof data['Balance'] === 'string' || data['Balance'] instanceof String)) {
            throw new Error("Expected the field `Balance` to be a primitive type in the JSON string but got " + data['Balance']);
        }
        // ensure the json data is a string
        if (data['CodeHash'] && !(typeof data['CodeHash'] === 'string' || data['CodeHash'] instanceof String)) {
            throw new Error("Expected the field `CodeHash` to be a primitive type in the JSON string but got " + data['CodeHash']);
        }
        // ensure the json data is a string
        if (data['Nonce'] && !(typeof data['Nonce'] === 'string' || data['Nonce'] instanceof String)) {
            throw new Error("Expected the field `Nonce` to be a primitive type in the JSON string but got " + data['Nonce']);
        }
        // ensure the json data is a string
        if (data['StorageRoot'] && !(typeof data['StorageRoot'] === 'string' || data['StorageRoot'] instanceof String)) {
            throw new Error("Expected the field `StorageRoot` to be a primitive type in the JSON string but got " + data['StorageRoot']);
        }

        return true;
    }


}

OutputGetAccount.RequiredProperties = ["Balance", "CodeHash", "Nonce", "StorageRoot"];

/**
 * A URL to the JSON Schema for this object.
 * @member {String} $schema
 */
OutputGetAccount.prototype['$schema'] = undefined;

/**
 * The current balance of the account in wei
 * @member {String} Balance
 */
OutputGetAccount.prototype['Balance'] = undefined;

/**
 * A 32 byte hash of the code of the account
 * @member {String} CodeHash
 */
OutputGetAccount.prototype['CodeHash'] = undefined;

/**
 * The transaction count of an account
 * @member {String} Nonce
 */
OutputGetAccount.prototype['Nonce'] = undefined;

/**
 * The hash of the account's storage data
 * @member {String} StorageRoot
 */
OutputGetAccount.prototype['StorageRoot'] = undefined;






export default OutputGetAccount;

