/**
 * QAN AutoApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.QanAutoApi);
  }
}(this, function(expect, QanAutoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new QanAutoApi.ResponseTransaction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ResponseTransaction', function() {
    it('should create an instance of ResponseTransaction', function() {
      // uncomment below and update the code to test ResponseTransaction
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be.a(QanAutoApi.ResponseTransaction);
    });

    it('should have the property accessList (base name: "AccessList")', function() {
      // uncomment below and update the code to test the property accessList
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property blockHash (base name: "BlockHash")', function() {
      // uncomment below and update the code to test the property blockHash
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property blockNumber (base name: "BlockNumber")', function() {
      // uncomment below and update the code to test the property blockNumber
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property chainId (base name: "ChainId")', function() {
      // uncomment below and update the code to test the property chainId
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "From")', function() {
      // uncomment below and update the code to test the property from
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property gas (base name: "Gas")', function() {
      // uncomment below and update the code to test the property gas
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property gasPrice (base name: "GasPrice")', function() {
      // uncomment below and update the code to test the property gasPrice
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property hash (base name: "Hash")', function() {
      // uncomment below and update the code to test the property hash
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property input (base name: "Input")', function() {
      // uncomment below and update the code to test the property input
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property maxFeePerGas (base name: "MaxFeePerGas")', function() {
      // uncomment below and update the code to test the property maxFeePerGas
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property maxPriorityFeePerGas (base name: "MaxPriorityFeePerGas")', function() {
      // uncomment below and update the code to test the property maxPriorityFeePerGas
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property nonce (base name: "Nonce")', function() {
      // uncomment below and update the code to test the property nonce
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property R (base name: "R")', function() {
      // uncomment below and update the code to test the property R
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property S (base name: "S")', function() {
      // uncomment below and update the code to test the property S
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "To")', function() {
      // uncomment below and update the code to test the property to
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionIndex (base name: "TransactionIndex")', function() {
      // uncomment below and update the code to test the property transactionIndex
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property V (base name: "V")', function() {
      // uncomment below and update the code to test the property V
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "Value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new QanAutoApi.ResponseTransaction();
      //expect(instance).to.be();
    });

  });

}));
