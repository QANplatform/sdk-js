/**
 * QAN AutoApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.QanAutoApi);
  }
}(this, function(expect, QanAutoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new QanAutoApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('qanAccounts', function() {
      it('should call qanAccounts successfully', function(done) {
        //uncomment below and update the code to test qanAccounts
        //instance.qanAccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanBlobBaseFee', function() {
      it('should call qanBlobBaseFee successfully', function(done) {
        //uncomment below and update the code to test qanBlobBaseFee
        //instance.qanBlobBaseFee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanBlockNumber', function() {
      it('should call qanBlockNumber successfully', function(done) {
        //uncomment below and update the code to test qanBlockNumber
        //instance.qanBlockNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanCall', function() {
      it('should call qanCall successfully', function(done) {
        //uncomment below and update the code to test qanCall
        //instance.qanCall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanChainId', function() {
      it('should call qanChainId successfully', function(done) {
        //uncomment below and update the code to test qanChainId
        //instance.qanChainId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanEstimateGas', function() {
      it('should call qanEstimateGas successfully', function(done) {
        //uncomment below and update the code to test qanEstimateGas
        //instance.qanEstimateGas(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanFeeHistory', function() {
      it('should call qanFeeHistory successfully', function(done) {
        //uncomment below and update the code to test qanFeeHistory
        //instance.qanFeeHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGasPrice', function() {
      it('should call qanGasPrice successfully', function(done) {
        //uncomment below and update the code to test qanGasPrice
        //instance.qanGasPrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetAccount', function() {
      it('should call qanGetAccount successfully', function(done) {
        //uncomment below and update the code to test qanGetAccount
        //instance.qanGetAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetBalance', function() {
      it('should call qanGetBalance successfully', function(done) {
        //uncomment below and update the code to test qanGetBalance
        //instance.qanGetBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetBlockByHash', function() {
      it('should call qanGetBlockByHash successfully', function(done) {
        //uncomment below and update the code to test qanGetBlockByHash
        //instance.qanGetBlockByHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetBlockByNumber', function() {
      it('should call qanGetBlockByNumber successfully', function(done) {
        //uncomment below and update the code to test qanGetBlockByNumber
        //instance.qanGetBlockByNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetBlockReceipts', function() {
      it('should call qanGetBlockReceipts successfully', function(done) {
        //uncomment below and update the code to test qanGetBlockReceipts
        //instance.qanGetBlockReceipts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetBlockTransactionCountByHash', function() {
      it('should call qanGetBlockTransactionCountByHash successfully', function(done) {
        //uncomment below and update the code to test qanGetBlockTransactionCountByHash
        //instance.qanGetBlockTransactionCountByHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetBlockTransactionCountByNumber', function() {
      it('should call qanGetBlockTransactionCountByNumber successfully', function(done) {
        //uncomment below and update the code to test qanGetBlockTransactionCountByNumber
        //instance.qanGetBlockTransactionCountByNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetCode', function() {
      it('should call qanGetCode successfully', function(done) {
        //uncomment below and update the code to test qanGetCode
        //instance.qanGetCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetFilterChanges', function() {
      it('should call qanGetFilterChanges successfully', function(done) {
        //uncomment below and update the code to test qanGetFilterChanges
        //instance.qanGetFilterChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetFilterLogs', function() {
      it('should call qanGetFilterLogs successfully', function(done) {
        //uncomment below and update the code to test qanGetFilterLogs
        //instance.qanGetFilterLogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetLogs', function() {
      it('should call qanGetLogs successfully', function(done) {
        //uncomment below and update the code to test qanGetLogs
        //instance.qanGetLogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetProof', function() {
      it('should call qanGetProof successfully', function(done) {
        //uncomment below and update the code to test qanGetProof
        //instance.qanGetProof(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetStorageAt', function() {
      it('should call qanGetStorageAt successfully', function(done) {
        //uncomment below and update the code to test qanGetStorageAt
        //instance.qanGetStorageAt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetTransactionByBlockHashAndIndex', function() {
      it('should call qanGetTransactionByBlockHashAndIndex successfully', function(done) {
        //uncomment below and update the code to test qanGetTransactionByBlockHashAndIndex
        //instance.qanGetTransactionByBlockHashAndIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetTransactionByBlockNumberAndIndex', function() {
      it('should call qanGetTransactionByBlockNumberAndIndex successfully', function(done) {
        //uncomment below and update the code to test qanGetTransactionByBlockNumberAndIndex
        //instance.qanGetTransactionByBlockNumberAndIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetTransactionByHash', function() {
      it('should call qanGetTransactionByHash successfully', function(done) {
        //uncomment below and update the code to test qanGetTransactionByHash
        //instance.qanGetTransactionByHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetTransactionCount', function() {
      it('should call qanGetTransactionCount successfully', function(done) {
        //uncomment below and update the code to test qanGetTransactionCount
        //instance.qanGetTransactionCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetTransactionReceipt', function() {
      it('should call qanGetTransactionReceipt successfully', function(done) {
        //uncomment below and update the code to test qanGetTransactionReceipt
        //instance.qanGetTransactionReceipt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetUncleCountByBlockHash', function() {
      it('should call qanGetUncleCountByBlockHash successfully', function(done) {
        //uncomment below and update the code to test qanGetUncleCountByBlockHash
        //instance.qanGetUncleCountByBlockHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanGetUncleCountByBlockNumber', function() {
      it('should call qanGetUncleCountByBlockNumber successfully', function(done) {
        //uncomment below and update the code to test qanGetUncleCountByBlockNumber
        //instance.qanGetUncleCountByBlockNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanMaxPriorityFeePerGas', function() {
      it('should call qanMaxPriorityFeePerGas successfully', function(done) {
        //uncomment below and update the code to test qanMaxPriorityFeePerGas
        //instance.qanMaxPriorityFeePerGas(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanNewBlockFilter', function() {
      it('should call qanNewBlockFilter successfully', function(done) {
        //uncomment below and update the code to test qanNewBlockFilter
        //instance.qanNewBlockFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanNewFilter', function() {
      it('should call qanNewFilter successfully', function(done) {
        //uncomment below and update the code to test qanNewFilter
        //instance.qanNewFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanNewPendingTransactionFilter', function() {
      it('should call qanNewPendingTransactionFilter successfully', function(done) {
        //uncomment below and update the code to test qanNewPendingTransactionFilter
        //instance.qanNewPendingTransactionFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanSendRawTransaction', function() {
      it('should call qanSendRawTransaction successfully', function(done) {
        //uncomment below and update the code to test qanSendRawTransaction
        //instance.qanSendRawTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanSubscribe', function() {
      it('should call qanSubscribe successfully', function(done) {
        //uncomment below and update the code to test qanSubscribe
        //instance.qanSubscribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanSyncing', function() {
      it('should call qanSyncing successfully', function(done) {
        //uncomment below and update the code to test qanSyncing
        //instance.qanSyncing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanUninstallFilter', function() {
      it('should call qanUninstallFilter successfully', function(done) {
        //uncomment below and update the code to test qanUninstallFilter
        //instance.qanUninstallFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanUnsubscribe', function() {
      it('should call qanUnsubscribe successfully', function(done) {
        //uncomment below and update the code to test qanUnsubscribe
        //instance.qanUnsubscribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qanXlinkValid', function() {
      it('should call qanXlinkValid successfully', function(done) {
        //uncomment below and update the code to test qanXlinkValid
        //instance.qanXlinkValid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
